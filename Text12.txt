Python gets a lot of love these days, particularly as a good language for beginning programmers. Its friendly, flexible syntax combined with the fact that it’s a scripting language makes it an especially good choice for newbies. But can it really compete with the more traditional, compiled programming languages such as C and Java in terms of performance? New research suggests that a scripting language like Python might indeed be all you need for most programming tasks.

Sebastian Nanz and Carlo Furia of the Department of Computer Science, ETH Zurich, Switzerland in their newly published paper “A Comparative Study of Programming Languages in Rosetta Code,” compare the performance of a handful of prominent languages. They analyzed data from Rosetta Code, a  repository of solutions to common tasks across different programming languages, such as matching strings against regular expressions, computing the factors of a positive integer and reading a specific line from a file. They chose to compare top languages representing four major programming paradigms: procedural, object oriented, functional and scripting. 

Using a snapshot of Rosetta Code data from June 2014, the authors analyzed 7,087 solutions to 745 tasks across two top programming languages from each of those four categories: C and Go (procedural), C# and Java (object oriented), F# and Haskell (functional) and Python and Ruby (scripting). The languages were compared based on a number of different metrics such as conciseness, run time, memory usage and failure rates. Some of the key results are probably what you would expect, but others maybe not so much.